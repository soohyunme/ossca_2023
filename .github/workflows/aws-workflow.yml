name: flask app deployment to EC2

on:  
    push:  
      branches: [ "test" ]  
    pull_request:  
      branches: [ "main" ]  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      run: |
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

    - name: Login to Amazon ECR
      run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:latest .
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:latest

    - name: SSH into EC2 and Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:latest
          docker stop ${{ secrets.CONTAINER_NAME }} || true
          docker rm ${{ secrets.CONTAINER_NAME }} || true
          docker run -d --name ${{ secrets.CONTAINER_NAME }} -p 80:5000 ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:latest